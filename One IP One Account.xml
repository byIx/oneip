<?xml version="1.0" encoding="UTF-8"?>
<plugin name="One IP One Account" version_long="10001" version_human="1.0.1" author="Faqole (Fixed by k4r1)" website="https://github.com/byIx/oneip" update_check="https://raw.githubusercontent.com/byIx/oneip/main/checker.php"><hooks><hook type="C" class="\IPS\core\modules\front\system\register" filename="oneiponeaccount"><![CDATA[//<?php

/* To prevent PHP errors (extending class does not exist) revealing path */
if ( !defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
	exit;
}

class hook702 extends _HOOK_CLASS_
{
	/**
	 * Normal registration form
	 *
	 * @return \IPS\Form
	 */
	protected function _registrationForm()
	{
		try
		{
			try
			{
				try
				{
					$ips = \IPS\Db::i()->select( '*', 'core_members', array( 'ip_address=?',  $_SERVER['REMOTE_ADDR'] ) );
				}
				catch( \UnderflowException $e ) {}
				
				$results = count( $ips );
				
				if (!empty($results))
				{
					$sameIpErrorMessage = \IPS\Member::loggedIn()->language()->addToStack('same_ip_error_message', FALSE, array( 'sprintf' => array(  $_SERVER['REMOTE_ADDR']) ) );
					\IPS\Output::i()->error( $sameIpErrorMessage, 'OneIpOneAccount', 403, '' );
				}
				
				return parent::_registrationForm( $postBeforeRegister );
			}
			catch ( \RuntimeException $e )
			{
				if ( method_exists( get_parent_class(), __FUNCTION__ ) )
				{
					return call_user_func_array( 'parent::' . __FUNCTION__, func_get_args() );
				}
				else
				{
					throw $e;
				}
			}
		}
		catch ( \RuntimeException $e )
		{
			if ( method_exists( get_parent_class(), __FUNCTION__ ) )
			{
				return call_user_func_array( 'parent::' . __FUNCTION__, func_get_args() );
			}
			else
			{
				throw $e;
			}
		}
	}
}
]]></hook></hooks><htmlFiles/><cssFiles/><jsFiles/><resourcesFiles/><lang><word key="same_ip_error_message" js="0">According to our database records there is already an account registered from this ip: %s.</word></lang><versions><version long="10001" human="1.0.1"><![CDATA[//<?php


/* To prevent PHP errors (extending class does not exist) revealing path */
if ( !\defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
	header( ( isset( $_SERVER['SERVER_PROTOCOL'] ) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.0' ) . ' 403 Forbidden' );
	exit;
}

class ips_plugins_setup_upg_10001
{
	/**
	 * Step 1
	 *
	 * @return true
	 */
	public function step1()
	{
		return true;
	}
}]]></version></versions></plugin>
